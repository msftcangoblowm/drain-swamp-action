# https://github.com/sphinx-notes/pages/blob/v3/action.yml
# https://help.github.com/en/articles/metadata-syntax-for-github-actions
---
name: drain-swamp-action
description: >-
  Before build pass in drain-swamp build backend plugin parameters
author: >-
  Dave Faulkmore

# https://feathericons.com/
branding:
  color: 'green'
  icon: 'rewind'

inputs:
  plugin_parameters:
    description: >-
      config settings key/value pairs mapping
    required: true
  toml_file_name:
    required: false
    default: 'setuptools-build.toml'
  cache:
    description: >-
      Enable checkout cache
    required: false
    default: false
  checkout:
    description: >-
      Whether to automatically checkout the repository, if false, user need to do it byself
    required: false
    default: true
  python_version:
    description: >-
      Version of Python
    required: false
    default: '3.10'

outputs:
  ds_config_settings:
    description: >-
      environment variable containing path to config_settings toml file
    value: ${{ steps.outcome.outputs.ds_config_settings }}

runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      if: ${{ inputs.checkout == 'true' && inputs.cache == 'true' }}
      with:
        fetch-depth: 0
    - name: Checkout
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      if: ${{ inputs.checkout == 'true' && inputs.cache == 'false' }}

    - name: Setup python
      uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5.2.0
      if: ${{ inputs.cache == 'true' }}
      with:
        python-version: ${{ inputs.python_version }}
        allow-prereleases: true
        # cache: pip
        # cache-dependency-path: |
        #   requirements.txt

    - name: Setup python
      uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5.2.0
      if: ${{ inputs.cache == 'false' }}
      with:
        allow-prereleases: true
        python-version: ${{ inputs.python_version }}

    # Writes to GITHUB_ENV file. In other steps env.TO_TOML and env.MAIN_SH will be available
    - name: Set paths
      shell: bash
      run: |
        python gh_joinpath.py --name="TO_TOML" "src" "to_toml.py"
        # python gh_joinpath.py --name="MAIN_SH" "main.sh"

    - name: Set script executable -- MacOS or Linux
      if: ${{ ! startsWith(matrix.os, 'windows') }}
      shell: bash
      run: |
        set -xe
        # chmod +x ${{ env.MAIN_SH }}
        chmod +x ${{ env.TO_TOML }}

    - name: Set script executable -- Windows
      if: startsWith(matrix.os, 'windows')
      shell: bash
      run: |
        set -xe
        # git update-index --chmod=+x '${{ env.MAIN_SH }}'
        git update-index --chmod=+x '${{ env.TO_TOML }}'

    - name: Prepare temp folder
      shell: bash
      run: |
        set -xe
        echo -e 'temp folder: ${{ runner.temp }} This path is available in environment variable, DS_CONFIG_SETTINGS'
        mkdir -p ${{ runner.temp }} ||:

    - id: outcome_win
      if: startsWith(matrix.os, 'windows')
      name: Prepare build backend plugin parameters
      env:
        # See https://github.com/actions/runner/issues/665
        # https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/accessing-contextual-information-about-workflow-runs#example-usage-of-the-runner-context
        DS_CONFIG_SETTINGS: ${{ runner.temp }}\\${{ inputs.toml_file_name }}
        INPUT_PLUGIN_PARAMETERS: ${{ inputs.plugin_parameters }}
      shell: bash
      run: |
        python '${{ env.TO_TOML }}'

    - id: outcome_other
      if: ${{ ! startsWith(matrix.os, 'windows') }}
      name: Prepare build backend plugin parameters
      env:
        # See https://github.com/actions/runner/issues/665
        # https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/accessing-contextual-information-about-workflow-runs#example-usage-of-the-runner-context
        DS_CONFIG_SETTINGS: ${{ runner.temp }}/${{ inputs.toml_file_name }}
        INPUT_PLUGIN_PARAMETERS: ${{ inputs.plugin_parameters }}
      shell: bash
      run: |
        python ${{ env.TO_TOML }}

    - name: Show output
      if: ${{ ! startsWith(matrix.os, 'windows') }}
      env:
        DS_CONFIG_SETTINGS: ${{ steps.outcome_other.outputs.ds_config_settings }}
      shell: bash
      run: |
        set -xe
        echo DS_CONFIG_SETTINGS contains path: ${{ env.DS_CONFIG_SETTINGS }}
        cat ${{ env.DS_CONFIG_SETTINGS }}

...
