# Will not everything leading up to the ``python -m build`` step
name: Prepare config_settings

on:
  push:
    branches:
    - v1
  workflow_dispatch:

defaults:
  run:
    shell: bash

# Cancel any in-progress job or run
# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#concurrency
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  PIP_DISABLE_PIP_VERSION_CHECK: 1

permissions:
  contents: read  # This is required for actions/checkout

jobs:
  build:
    name: >-
      ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        os:
          # https://launchpad.net/~deadsnakes/+archive/ubuntu/nightly/+packages
          # https://github.com/deadsnakes/issues/issues/234
          # See https://github.com/deadsnakes/nightly for the source of the nightly
          # builds.
          # bionic: 18, focal: 20, jammy: 22, noble: 24
          - ubuntu-22.04
          - macos-latest
          - windows-latest
        python-version:
          # When changing this list, be sure to check the [gh] list in
          # tox.ini so that tox will run properly. PYVERSIONS
          # Available versions:
          # https://github.com/actions/python-versions/blob/main/versions-manifest.json
          # https://github.com/actions/setup-python/blob/main/docs/advanced-usage.md#available-versions-of-python-and-pypy
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
        exclude:
          # https://github.com/pypy/pypy/issues/4958
          - os: windows
            python-version: "pypy-3.9"
          - os: windows-latest
            python-version: "3.13"
          - os: macos-latest
            python-version: "3.13"
      fail-fast: false
    permissions:
      id-token: write
    steps:
    - id: prepare-config-settings
      name: >-
        Build Plugin parameters
      uses: 'msftcangoblowm/drain-swamp-action@v1'
      with:
        plugin_parameters: '{"set-lock": "1", "kind": "current"}'
        checkout: true
        fetch_tags: true
        python_version: "${{ matrix.python-version }}"

    - name: "Download artifact"
      uses: actions/download-artifact@v4
      with:
        name: config-settings-${{ matrix.os }}-${{ matrix.python-version }}
        path: '${{ runner.temp }}'

    - name: "What did we get? -- Windows"
      if: startsWith(matrix.os, 'windows')
      env:
        DS_CONFIG_SETTINGS: '${{ runner.temp }}\${{ steps.outcome.inputs.toml_file_name }}'
      run: |
        set -xe
        ls -al '${{ runner.temp }}'
        cat ${{ env.DS_CONFIG_SETTINGS }}

    - name: "What did we get? -- Linux and MacOS"
      if: ${{ ! startsWith(matrix.os, 'windows') }}
      env:
        DS_CONFIG_SETTINGS: ${{ runner.temp }}/${{ steps.outcome.inputs.toml_file_name }}
      run: |
        set -xe
        ls -al '${{ runner.temp }}'
        cat ${{ env.DS_CONFIG_SETTINGS }}
